/* Copyright Â© 2017 Ganchrow Scientific, SA all rights reserved */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const DEFAULT_AUXILLARY_CLOSE = '\nend)\n';
const DEFAULT_AUXILLARY_FUNCTION = (moduleName) => `registerModule('${moduleName}', function()`;
exports.DEFAULT_MODULE_PREFIX = `
-- Module Wrapper
local modules = {}

local function resolvePath(path)
  return path:gsub('%.lua$', '')
end

local function registerModule(path, moduleFunction)
  local resolvedPath = resolvePath(path)
  if not modules[resolvedPath] then
    modules[resolvedPath] = moduleFunction()
  end
end

local function require(path)
  return modules[resolvePath(path)]
end
-- End Module Wrapper
`;
class ModuleWrapper {
    constructor(prefix = (basePath) => exports.DEFAULT_MODULE_PREFIX, auxillaryFunction = DEFAULT_AUXILLARY_FUNCTION, auxillaryClose = DEFAULT_AUXILLARY_CLOSE) {
        this.prefix = prefix;
        this.auxillaryFunction = auxillaryFunction;
        this.auxillaryClose = auxillaryClose;
    }
    header(basePath) {
        return this.prefix(basePath);
    }
    close() {
        return this.auxillaryClose;
    }
    wrapAuxillary(moduleName) {
        return this.auxillaryFunction(moduleName);
    }
}
exports.ModuleWrapper = ModuleWrapper;
//# sourceMappingURL=moduleWrapper.js.map