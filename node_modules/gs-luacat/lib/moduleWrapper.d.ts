export declare const DEFAULT_MODULE_PREFIX = "\n-- Module Wrapper\nlocal modules = {}\n\nlocal function resolvePath(path)\n  return path:gsub('%.lua$', '')\nend\n\nlocal function registerModule(path, moduleFunction)\n  local resolvedPath = resolvePath(path)\n  if not modules[resolvedPath] then\n    modules[resolvedPath] = moduleFunction()\n  end\nend\n\nlocal function require(path)\n  return modules[resolvePath(path)]\nend\n-- End Module Wrapper\n";
export declare class ModuleWrapper {
    private prefix;
    private auxillaryFunction;
    private auxillaryClose;
    constructor(prefix?: (basePath: string) => string, auxillaryFunction?: (moduleName: string) => string, auxillaryClose?: string);
    header(basePath: string): string;
    close(): string;
    wrapAuxillary(moduleName: string): string;
}
