/* Copyright Â© 2017 Ganchrow Scientific, SA all rights reserved */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
// include this line to fix stack traces
require("source-map-support/register");
const chunker_1 = require("./chunker");
const fs = require("fs");
const zlib = require("zlib");
const Rx = require("rxjs");
class FileSlurper {
    constructor(filePath, split) {
        this.filePath = filePath;
        this.split = split;
        this.isBinary = this.filePath.endsWith('.gz');
    }
    slurp() {
        this.chunker = new chunker_1.Chunker(this.split);
        return Rx.Observable.create(observer => {
            try {
                this.createStream()
                    .on('data', chunk => {
                    this.chunker.forEachCompleteChunk(chunk, (buffer) => {
                        observer.next(buffer.toString());
                    });
                })
                    .on('end', () => observer.complete())
                    .on('error', (err) => observer.error(err));
            }
            catch (e) {
                observer.error(e);
            }
        });
    }
    createStream() {
        if (this.isBinary) {
            let readStream = fs.createReadStream(this.filePath);
            return readStream.pipe(zlib.createGunzip());
        }
        else {
            return fs.createReadStream(this.filePath, { encoding: 'utf8' });
        }
    }
}
exports.FileSlurper = FileSlurper;
//# sourceMappingURL=fileSlurper.js.map