import { expect as jasmineExpect } from 'jasmine-core';
export declare class JasmineExpectation {
    private expect;
    private jasmineDone?;
    private expectedTestCalls;
    constructor(expect: jasmineExpect, jasmineDone?: Function);
    ok(val: any, ...args: any[]): void;
    expectCount(num: number): void;
    deepEqual(a: any, b: any, ...args: any[]): void;
    notDeepEqual(a: any, b: any, ...args: any[]): void;
    strictEqual(a: any, b: any, ...args: any[]): void;
    notStrictEqual(a: any, b: any, ...args: any[]): void;
    throws(a: any, b?: any, ...args: any[]): void;
    doesNotThrow(a: any, b?: any, ...args: any[]): void;
    done(e?: Error): void;
}
export interface BasicTests {
    [prop: string]: (test: JasmineExpectation) => void;
}
export interface BasicTestsSetup {
    setUp?: (cb?: Function) => void;
    tearDown?: (cb?: Function) => void;
}
export declare const testWrapper: {
    init(expect: any): JasmineExpectation;
    run(module: BasicTests & BasicTestsSetup, expect: any, desc?: string): void;
};
