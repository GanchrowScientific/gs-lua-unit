/* Copyright Â© 2017 Ganchrow Scientific, SA all rights reserved */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const gsLogger_1 = require("./gsLogger");
const logger = gsLogger_1.getLogger('Incrementer');
class Incrementer {
    constructor(trackIdleTime, trackInterval) {
        this.trackIdleTime = trackIdleTime;
        this.trackInterval = trackInterval;
        this.map = new Map();
        this.beginIdleCheck();
    }
    get(item) {
        let tracker = this.map.get(item);
        if (tracker) {
            return tracker.value;
        }
        this.map.set(item, this.newValue(0));
        return 0;
    }
    incr(item, value = 1) {
        this.map.set(item, this.newValue(this.get(item) + value));
    }
    clear(item) {
        return this.map.delete(item);
    }
    beginIdleCheck() {
        if (this.trackIdleTime > 0) {
            setInterval(() => {
                let t = Date.now();
                for (let [key, tracker] of this.map.entries()) {
                    if ((t - tracker.timestamp) >= this.trackIdleTime) {
                        logger.debug(`Clearing idle incrementer key ${key}`);
                        this.clear(key);
                    }
                }
            }, this.trackInterval);
        }
    }
    newValue(n) {
        return { value: n, timestamp: Date.now() };
    }
}
exports.Incrementer = Incrementer;
exports.createIncrementer = (idleTime = 5000, interval = 60000) => {
    return new Incrementer(idleTime, interval);
};
//# sourceMappingURL=incrementer.js.map